#
# SPDX-License-Identifier: Apache-2.0
#
---
- name: Instantiate chaincode
  hosts: localhost
  vars_files:
    - vars/common.yaml
    - vars/api.yaml
    - vars/organizations.yaml
  vars:
    # peer_org_name: org1
    # channel_name: samplechannel1
    # cc_name: marbles
    # cc_ver: v1
    # cc_endorsement_policy: OR('Org1MSP.peer','Org2MSP.peer')
    # cc_collections_config: 
    # cc_init_func: init
    # cc_init_args: 
    ordering_service_name: "{{ vars['ordering_organization'][os_org_name]['orderer']['name'] }}"
    org_msp_admin: "{{ vars['peer_organizations'][peer_org_name]['msp']['admin'] }}{{ identity_prefix }}.json"
    org_msp_id: "{{ vars['peer_organizations'][peer_org_name]['msp']['id'] }}"
    org_msp_name: "{{ vars['peer_organizations'][peer_org_name]['msp']['name'] }}"
    target_peer: "{{ vars['peer_organizations'][peer_org_name]['peers'][0] }}" # hardcoded to first peer
  tasks:
    - name: Instantiate the chaincode on the channel
      ibm.blockchain_platform.instantiated_chaincode:
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        peer: "{{ target_peer }}"
        identity: "{{ org_msp_admin }}"
        msp_id: "{{ org_msp_id }}"
        channel: "{{ channel_name }}"
        name: "{{ cc_name }}"
        constructor:
          function: "{{ cc_init_func | default(omit) }}"
          args: "{{ cc_init_args | default(omit) }}"
        version: "{{ cc_ver }}"
        endorsement_policy: "{{ cc_endorsement_policy | default(omit) }}"
        collections_config: "{{ cc_collections_config | default(omit) }}"
