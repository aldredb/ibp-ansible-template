---
- name: Add organizations to the consortium
  hosts: localhost
  vars_files:
    - vars/common.yaml
    - vars/api.yaml
    - vars/organizations.yaml
    - vars/channels.yaml
  vars:
    # os_org_name: os
    org: "{{ vars['ordering_organization'][os_org_name] }}"
    ordering_service_msp_admin: "{{ playbook_dir }}/{{ wallet_path }}/{{ org.msp.admin }}.json"
  tasks:
    - name: Get the ordering service information
      ibm.blockchain_platform.ordering_service_info:
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key | default(omit) }}"
        api_secret: "{{ api_secret | default(omit)}}"
        name: "{{ org.orderer.name }}"
      register: os_info

    - name: Fail if ordering service does not exist
      fail:
        msg: "{{ org.orderer.name }} does not exist"
      when: not os_info.exists

    - name: Fetch the system channel configuration
      ibm.blockchain_platform.channel_config:
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        operation: fetch
        ordering_service: "{{ org.orderer.name }}"
        identity: "{{ ordering_service_msp_admin }}"
        msp_id: "{{ org.msp.id }}"
        name: "{{ os_info.ordering_service[0].system_channel_id }}"
        path: "{{ channel_config_path }}/original_config.bin"

    - name: Create a copy of the system channel configuration
      copy:
        src: "{{ channel_config_path }}/original_config.bin"
        dest: "{{ channel_config_path }}/updated_config.bin"

    - name: Add the organization to the consortium
      ibm.blockchain_platform.consortium_member:
        state: present
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        api_token_endpoint: "{{ api_token_endpoint | default(omit) }}"
        organization: "{{ peer_organizations[item].msp.name }}"
        path: "{{ channel_config_path }}/updated_config.bin"
      loop: "{{ consortium_members }}"

    - name: Compute the system channel configuration update
      ibm.blockchain_platform.channel_config:
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        operation: compute_update
        ordering_service: "{{ org.orderer.name }}"
        identity: "{{ ordering_service_msp_admin }}"
        msp_id: "{{ org.msp.id }}"
        name: "{{ os_info.ordering_service[0].system_channel_id }}"
        original: "{{ channel_config_path }}/original_config.bin"
        updated: "{{ channel_config_path }}/updated_config.bin"
        path: "{{ channel_config_path }}/config_update.bin"
      register: compute_update

    - name: Sign the system channel configuration update
      ibm.blockchain_platform.channel_config:
        operation: sign_update
        identity: "{{ ordering_service_msp_admin }}"
        msp_id: "{{ org.msp.id }}"
        name: "{{ os_info.ordering_service[0].system_channel_id }}"
        path: "{{ channel_config_path }}/config_update.bin"
      when: compute_update.path

    - name: Apply the system channel configuration update
      ibm.blockchain_platform.channel_config:
        api_endpoint: "{{ api_endpoint }}"
        api_authtype: "{{ api_authtype }}"
        api_key: "{{ api_key }}"
        api_secret: "{{ api_secret | default(omit) }}"
        operation: apply_update
        ordering_service: "{{ org.orderer.name }}"
        identity: "{{ ordering_service_msp_admin }}"
        msp_id: "{{ org.msp.id }}"
        name: "{{ os_info.ordering_service[0].system_channel_id }}"
        path: "{{ channel_config_path }}/config_update.bin"
      when: compute_update.path
