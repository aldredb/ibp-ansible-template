---
- name: Create Ordering Service Organization
  hosts: localhost
  vars_files:
    - vars/common.yaml
    - vars/organizations.yaml
  vars:
    # org_name: os
    org: "{{ vars['ordering_organization'][org_name] }}"
    enrollment_info: "{{ org.ca.id_list | selectattr('name','equalto', org.orderer.name) | first }}"
    msp_admin_info: "{{ org.ca.id_list | selectattr('name', 'equalto', org.msp.admin) | list }}"
  tasks:
    - name: Create certificate authority
      ibm.blockchain_platform.certificate_authority:
        state: "{{ state }}"
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit)}}"
        name: "{{ org.ca.name }}"
        zone: "{{ org.ca.zone | default(omit) }}"
        version: "{{ org.ca.version | default('1.4.7-1')}}"
        config_override:
          ca:
            registry:
              maxenrollments: -1
              identities:
                - name: "{{ org.ca.admin_enrollment_id }}"
                  pass: "{{ org.ca.admin_enrollment_secret }}"
                  type: client
                  maxenrollments: -1
                  attrs:
                    hf.Registrar.Roles: "*"
                    hf.Registrar.DelegateRoles: "*"
                    hf.Revoker: true
                    hf.IntermediateCA: true
                    hf.GenCRL: true
                    hf.Registrar.Attributes: "*"
                    hf.AffiliationMgr: true
        resources:
          ca:
            requests:
              cpu: "{{ org.ca.resource.vcpu | default('100m') }}"
              memory: "{{ org.ca.resource.memory | default('200M') }}"
        storage:
          ca:
            size: "{{ org.ca.resource.storage | default('20Gi') }}"
        wait_timeout: "{{ wait_timeout | default(900) }}"

    - name: Enroll CA admin
      ibm.blockchain_platform.enrolled_identity:
        state: "{{ state }}"
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit)}}"
        certificate_authority: "{{ org.ca.name }}"
        name: "{{ org.ca.admin_name }}"
        enrollment_id: "{{ org.ca.admin_enrollment_id }}"
        enrollment_secret: "{{ org.ca.admin_enrollment_secret }}"
        path: "{{ wallet_path }}/{{ org.ca.admin_name }}.json"

    - name: Register org admin, orderer and monitoring user
      ibm.blockchain_platform.registered_identity:
        state: "{{ state }}"
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit)}}"
        certificate_authority: "{{ org.ca.name }}"
        registrar: "{{ wallet_path }}/{{ org.ca.admin_name }}.json"
        enrollment_id: "{{ item.enrollment_id }}"
        enrollment_secret: "{{ item.enrollment_secret }}"
        type: "{{ item.type }}"
      loop: "{{ org.ca.id_list }}"

    - name: Enroll the org admin
      ibm.blockchain_platform.enrolled_identity:
        state: "{{ state }}"
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit)}}"
        certificate_authority: "{{ org.ca.name }}"
        name: "{{ org.msp.admin }}"
        enrollment_id: "{{ msp_admin_info[0].enrollment_id }}"
        enrollment_secret: "{{ msp_admin_info[0].enrollment_secret }}"
        path: "{{ wallet_path }}/{{ org.msp.admin }}.json"
      register: org_admin

    - name: Create organization
      ibm.blockchain_platform.organization:
        state: "{{ state }}"
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit)}}"
        name: "{{ org.msp.name }}"
        msp_id: "{{ org.msp.id }}"
        certificate_authority: "{{ org.ca.name }}"
        registrar: "{{ wallet_path }}/{{ org.ca.admin_name }}.json"
        admins:
          - "{{ org_admin.enrolled_identity.cert }}"

    - name: Create ordering service
      ibm.blockchain_platform.ordering_service:
        state: "{{ state }}"
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit) }}"
        name: "{{ org.orderer.name }}"
        msp_id: "{{ org.msp.id }}"
        nodes: "{{ org.orderer.nodes }}"
        zones: "{{ org.orderer.zones | default(omit) }}"
        version: "{{ org.orderer.version | default('1.4.7-1')}}"
        certificate_authority: "{{ org.ca.name }}"
        enrollment_id: "{{ enrollment_info.enrollment_id }}"
        enrollment_secret: "{{ enrollment_info.enrollment_secret }}"
        admin_certificates:
          - "{{ org_admin.enrolled_identity.cert }}"
        resources:
          orderer:
            requests:
              cpu: "{{ org.orderer.resource.orderer.vcpu | default('350m') }}"
              memory: "{{ org.orderer.resource.orderer.memory | default('400M') }}"
          proxy:
            requests:
              cpu: "{{ org.orderer.resource.proxy.vcpu | default('100m') }}"
              memory: "{{ org.orderer.resource.proxy.memory | default('200M') }}"
        storage:
          orderer:
            size: "{{ org.orderer.resource.orderer.storage | default('100Gi') }}"
        wait_timeout: "{{ wait_timeout | default(900) }}"
      register: result
      until: result.msg is not defined or 'Failed' is not in result.msg
      retries: 3
      delay: 5

    - name: Retrieve the ordering service
      ibm.blockchain_platform.ordering_service_info:
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit) }}"
        name: "{{ org.orderer.name }}"
      register: result

    - name: Store the ordering service in a file
      copy:
        content: "{{ result.ordering_service | to_nice_json }}"
        dest: "{{ components_path }}/{{ org.orderer.name }}_Orderer.json"

    - name: Retrieve MSP
      ibm.blockchain_platform.organization_info:
        api_endpoint: "{{ org.console.api_endpoint }}"
        api_authtype: "{{ org.console.api_authtype }}"
        api_key: "{{ org.console.api_key | default(omit) }}"
        api_secret: "{{ org.console.api_secret | default(omit)}}"
        name: "{{ org.msp.name }}"
      register: result

    - name: Store MSP into a file
      copy:
        content: "{{ result.organization | to_nice_json }}"
        dest: "{{ components_path }}/{{ org.msp.name }}_MSP.json"